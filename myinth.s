; Generated by c86 (BYU-NASM) 5.1 (beta) from myinth.i
	CPU	8086
	ALIGN	2
	jmp	main	; Jump to program start
L_myinth_1:
	DB	"RESET",0
	ALIGN	2
resetISRC:
	; >>>>> Line:	7
	; >>>>> { 
	jmp	L_myinth_2
L_myinth_3:
	; >>>>> Line:	8
	; >>>>> printString("RESET"); 
	mov	ax, L_myinth_1
	push	ax
	call	printString
	add	sp, 2
	; >>>>> Line:	9
	; >>>>> exit(0); 
	xor	al, al
	push	ax
	call	exit
	add	sp, 2
	mov	sp, bp
	pop	bp
	ret
L_myinth_2:
	push	bp
	mov	bp, sp
	jmp	L_myinth_3
	ALIGN	2
tickISRC:
	; >>>>> Line:	13
	; >>>>> { 
	jmp	L_myinth_5
L_myinth_6:
	; >>>>> Line:	16
	; >>>>> } 
	mov	sp, bp
	pop	bp
	ret
L_myinth_5:
	push	bp
	mov	bp, sp
	jmp	L_myinth_6
L_myinth_9:
	DB	") IGNORED",0xA,0
L_myinth_8:
	DB	0xA,"KEYPRESS (",0
	ALIGN	2
keyboardISRC:
	; >>>>> Line:	19
	; >>>>> { 
	jmp	L_myinth_10
L_myinth_11:
	; >>>>> Line:	21
	; >>>>> c = KeyBuffer; 
	mov	al, byte [KeyBuffer]
	mov	byte [bp-1], al
	; >>>>> Line:	23
	; >>>>> if(c == 'a') YKEventSet(charEvent, 0x1); 
	cmp	byte [bp-1], 97
	jne	L_myinth_12
	; >>>>> Line:	23
	; >>>>> if(c == 'a') YKEventSet(charEvent, 0x1); 
	mov	ax, 1
	push	ax
	push	word [charEvent]
	call	YKEventSet
	add	sp, 4
	jmp	L_myinth_13
L_myinth_12:
	; >>>>> Line:	24
	; >>>>> else if(c == 'b') YKEventSet(charEvent, 0x2); 
	cmp	byte [bp-1], 98
	jne	L_myinth_14
	; >>>>> Line:	24
	; >>>>> else if(c == 'b') YKEventSet(charEvent, 0x2); 
	mov	ax, 2
	push	ax
	push	word [charEvent]
	call	YKEventSet
	add	sp, 4
	jmp	L_myinth_15
L_myinth_14:
	; >>>>> Line:	25
	; >>>>> else if(c == 'c') YKEventSet(charEvent, 0x4); 
	cmp	byte [bp-1], 99
	jne	L_myinth_16
	; >>>>> Line:	25
	; >>>>> else if(c == 'c') YKEventSet(charEvent, 0x4); 
	mov	ax, 4
	push	ax
	push	word [charEvent]
	call	YKEventSet
	add	sp, 4
	jmp	L_myinth_17
L_myinth_16:
	; >>>>> Line:	26
	; >>>>> else if(c == 'd') YKEventSet(charEvent, 0x1 | 0x2 | 0x4); 
	cmp	byte [bp-1], 100
	jne	L_myinth_18
	; >>>>> Line:	26
	; >>>>> else if(c == 'd') YKEventSet(charEvent, 0x1 | 0x2 | 0x4); 
	mov	ax, 7
	push	ax
	push	word [charEvent]
	call	YKEventSet
	add	sp, 4
	jmp	L_myinth_19
L_myinth_18:
	; >>>>> Line:	27
	; >>>>> else if(c == '1') YKEventSet(numEvent, 0x1); 
	cmp	byte [bp-1], 49
	jne	L_myinth_20
	; >>>>> Line:	27
	; >>>>> else if(c == '1') YKEventSet(numEvent, 0x1); 
	mov	ax, 1
	push	ax
	push	word [numEvent]
	call	YKEventSet
	add	sp, 4
	jmp	L_myinth_21
L_myinth_20:
	; >>>>> Line:	28
	; >>>>> else if(c == '2') YKEventSet(numEvent, 0x2); 
	cmp	byte [bp-1], 50
	jne	L_myinth_22
	; >>>>> Line:	28
	; >>>>> else if(c == '2') YKEventSet(numEvent, 0x2); 
	mov	ax, 2
	push	ax
	push	word [numEvent]
	call	YKEventSet
	add	sp, 4
	jmp	L_myinth_23
L_myinth_22:
	; >>>>> Line:	29
	; >>>>> else if(c == '3') YKEventSet(numEvent, 0x4); 
	cmp	byte [bp-1], 51
	jne	L_myinth_24
	; >>>>> Line:	29
	; >>>>> else if(c == '3') YKEventSet(numEvent, 0x4); 
	mov	ax, 4
	push	ax
	push	word [numEvent]
	call	YKEventSet
	add	sp, 4
	jmp	L_myinth_25
L_myinth_24:
	; >>>>> Line:	31
	; >>>>> print("\nKEYPRESS (", 11); 
	mov	ax, 11
	push	ax
	mov	ax, L_myinth_8
	push	ax
	call	print
	add	sp, 4
	; >>>>> Line:	32
	; >>>>> printChar(c); 
	push	word [bp-1]
	call	printChar
	add	sp, 2
	; >>>>> Line:	33
	; >>>>> print(") IGNORED\n", 10); 
	mov	ax, 10
	push	ax
	mov	ax, L_myinth_9
	push	ax
	call	print
	add	sp, 4
L_myinth_25:
L_myinth_23:
L_myinth_21:
L_myinth_19:
L_myinth_17:
L_myinth_15:
L_myinth_13:
	mov	sp, bp
	pop	bp
	ret
L_myinth_10:
	push	bp
	mov	bp, sp
	push	cx
	jmp	L_myinth_11
